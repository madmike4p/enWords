 You can use this function to get all available files in www/audio/ folder

function listDir(path){
  window.resolveLocalFileSystemURL(path,
    function (fileSystem) {
      var reader = fileSystem.createReader();
      reader.readEntries(
        function (entries) {
          console.log(entries);
        },
        function (err) {
          console.log(err);
        }
      );
    }, function (err) {
      console.log(err);
    }
  );
}
//example: list of www/audio/ folder in cordova/ionic app.
listDir(cordova.file.applicationDirectory + "www/audio/");


----------

window.requestFileSystem(LocalFileSystem.PERSISTENT, 0,
           function (fileSystem) { 
               alert("root name=" + fileSystem.root.name); //alert working
              //after this not working 
               var path = "index.html";
               fileSystem.root.getFile(path, null, function (fileEntry) {
                   alert('file entry');

                   fileEntry.file(gotFile, fail);

               }, fail);
           }, fail);

       function fail(error) {
           alert("File System Error:" + error.code);
       }


Update Solved:

I solved the problem by going to my bin -> windows phone directory. And then i renamed the .xap file to .zip to extract the content. I found there that my files are correctly deployed along with cordova plugins. But my files were inside www directory. So i sepcified the path and it works now;

var path = "www/index.html"; 

----

document.addEventListener("deviceready", function () {  
    window.resolveLocalFileSystemURL(cordova.file.applicationDirectory + "sameple.txt", gotFile, fail);
}, true);

function gotFile(file) {           
    file.file(function (file) {                
        var reader = new FileReader();
        reader.onloadend = function (evt) {          
            console.log(this.result);
        }
        reader.readAsText(file);                
    }, fail());            
}

function fail(e) {
    console.info("FileSystem Error : " + e);
}

----------

document.addEventListener("deviceready", init, false); function init() { //This alias is a read-only pointer to the app itself window.resolveLocalFileSystemURL(cordova.file.applicationDirectory + "www/index.html", gotFile, fail); /* Yes, this works too for our specific example...
	$.get("index.html", function(res) {
		console.log("index.html", res);
	});
	*/ } function fail(e) { console.log("FileSystem Error"); console.dir(e); } function gotFile(fileEntry) { fileEntry.file(function(file) { var reader = new FileReader(); reader.onloadend = function(e) { console.log("Text is: "+this.result); document.querySelector("#textArea").innerHTML = this.result; } reader.readAsText(file); }); }